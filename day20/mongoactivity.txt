
1.Try above examples
2 Create 2 collections with the same name & different case ex: employee & EMPLOYEE and insert documents in both the collections and observe the result
 
db.createCollection("employee");
{ "ok" : 1 }
> db.createCollection("EMPLOYEE");
{ "ok" : 1 }
> db.emloyee.insertOne({_id:10,Name:"Nikhil"});
{ "acknowledged" : true, "insertedId" : 10 }
> db.EMPLOYEE.insertOne({_id:10,Name:"Nikhil"});
{ "acknowledged" : true, "insertedId" : 10 }
> db.employee.find();
> db.EMPLOYEE.find();
{ "_id" : 10, "Name" : "Nikhil" }
> db.employee.insertOne({_id:10,Name:"Nikhil"});
{ "acknowledged" : true, "insertedId" : 10 }
> db.employee.find();
{ "_id" : 10, "Name" : "Nikhil" }


3.Create a collection user with _id, name, password

> db.createCollection("user");
{ "ok" : 1 }
> db.user.insertMany([{_id: 11, name:"pawan", password:"paw@123"},{_id: 12, name:"akshay", password:"akki123"},{_id: 13, name: "suyog", password:"shadow12"}]);
{ "acknowledged" : true, "insertedIds" : [ 11, 12, 13 ] }


4.Store some documents in the user collection

> db.user.insertMany([{_id: 11, name:"pawan", password:"paw@123"},{_id: 12, name:"akshay", password:"akki123"},{_id: 13, name: "suyog", password:"shadow12"}]);
{ "acknowledged" : true, "insertedIds" : [ 11, 12, 13 ] }

5.Find the user based on the _id i.e., view the document on a particular _id

 > db.user.find({_id:11});
{ "_id" : 11, "name" : "pawan", "password" : "paw@123" }



6.Delete the user based on the _id
 
> db.user.deleteOne({_id:12});
{ "acknowledged" : true, "deletedCount" : 1 }
> db.user.find();
{ "_id" : 11, "name" : "pawan", "password" : "paw@123" }
{ "_id" : 13, "name" : "suyog", "password" : "shadow12"}

7.Delete all the users on one go.

> db.user.remove({});
WriteResult({ "nRemoved" : 2 })
> db.user.find();
> db.user.remove({});
WriteResult({ "nRemoved" : 2 })
> db.user.find();

8.Store some more documents in the user collection

> db.user.find();
> db.user.insertMany([{_id: 11, name:"pawan", password:"paw@123"},{_id: 12, name:"akshay", password:"akki123"},{_id: 13, name: "suyog", password:"shadow12"}]);
{ "acknowledged" : true, "insertedIds" : [ 11, 12, 13 ] }


9.Update the password of a particular user using _id

> db.user.update({_id:12},{$set:{password:"akki00"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.user.find();
{ "_id" : 11, "name" : "pawan", "password" : "paw@123" }
{ "_id" : 12, "name" : "akshay", "password" : "akki00" }
{ "_id" : 13, "name" : "suyog", "password" : "shadow12" }



